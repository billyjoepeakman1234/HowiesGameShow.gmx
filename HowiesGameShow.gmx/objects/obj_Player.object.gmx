<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Spr_Glock_Onehand</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

hp = 100;
rspeed = 20;
dir = 0;
spd = 3.5;
moved = false;

global.weapon = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement and Collision

//Weapon Array
scr_WeaponArray();

dir = point_direction(x, y, mouse_x, mouse_y);
var hdir = 0; vdir = 0;

image_angle += sin(degtorad(dir - image_angle)) * rspeed;

var keyUp = keyboard_check(ord("W"));
var keyDown = keyboard_check(ord("S"));
var keyLeft = keyboard_check(ord("A"));
var keyRight = keyboard_check(ord("D"));

if (keyUp) {

    moved = true;
    vdir = -1;

} else if (keyDown) {

    moved = true;
    vdir = 1;

}

if (keyLeft) {

    moved = true;
    hdir = -1;
   

} else if (keyRight) {

    moved = true;
    hdir = 1;
     

}




if (keyboard_check_released(ord("W"))) { moved = false; }
if (keyboard_check_released(ord("S"))) { moved = false; }
if (keyboard_check_released(ord("A"))) { moved = false; }
if (keyboard_check_released(ord("D"))) { moved = false; }

if (moved &gt; 0) {

    dir = point_direction(0, 0, hdir, vdir);
    var xmot, ymot;
    
    for (var i = 0; i &lt; 90; i += 5) {

        xmot = x + lengthdir_x(spd, dir + i);
        ymot = y + lengthdir_y(spd, dir + i);

        if (!place_meeting(xmot, ymot, obj_Parent)) {

            x = xmot;
            y = ymot; 
            break;

        }

        xmot = x + lengthdir_x(spd, dir - i);
        ymot = y + lengthdir_y(spd, dir - i);

        if (!place_meeting(xmot, ymot, obj_Parent)) {

            x = xmot;
            y = ymot;
            break;

        }
    }


}

//Avoid Obstacles
inst = instance_place(x, y, obj_Parent);

if (instance_exists(inst)) {

    if (y &gt; inst.y) { 
        y += 1;
    } else { y -= 1; }
    
    if (x &gt; inst.x) { 
      x += 1;
   } else { x -= 1; }
    
}

//Script Calling
scr_PlayerFire();

//Death
if (hp &lt;= 0) { room_restart(); }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Test Aiming

draw_self();

draw_set_color(c_red);
draw_line(x, y, mouse_x, mouse_y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
